{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/alex/Desktop/rickandmorty/components/ResidentDetails/index.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query Character($id: ID!) {\\n    character(id: $id) {\\n      id\\n      image\\n      name\\n      status\\n      type\\n      origin {\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { ResidentDetailsContainer, ResidentImage, ResidentInfo } from './styles';\nimport { Title, Text } from '../LocationsContainer/LocationItem/styles';\nvar RESIDENT_QUERY = gql(_templateObject());\n\nvar ResidentDetails = function ResidentDetails(_ref) {\n  var id = _ref.id;\n\n  var _useQuery = useQuery(RESIDENT_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data;\n\n  return __jsx(React.Fragment, null, data && __jsx(ResidentDetailsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(ResidentImage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: data.character.image,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), __jsx(ResidentInfo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, data.character.name), __jsx(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, data.character.name), __jsx(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, data.character.type), __jsx(Title, {\n    margin: \"10px 0 0 0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Status:\"), __jsx(Title, {\n    light: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, data.character.status), __jsx(Title, {\n    margin: \"10px 0 0 0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Home Planet:\"), __jsx(Title, {\n    light: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, data.character.origin.name))));\n};\n\nexport default ResidentDetails;","map":{"version":3,"sources":["/Users/alex/Desktop/rickandmorty/components/ResidentDetails/index.js"],"names":["React","gql","useQuery","ResidentDetailsContainer","ResidentImage","ResidentInfo","Title","Text","RESIDENT_QUERY","ResidentDetails","id","variables","data","character","image","name","type","status","origin"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SACEC,wBADF,EAEEC,aAFF,EAGEC,YAHF,QAIO,UAJP;AAKA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,2CAA5B;AAEA,IAAMC,cAAc,GAAGP,GAAH,mBAApB;;AAeA,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,OAAY;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,kBACjBR,QAAQ,CAACM,cAAD,EAAiB;AACxCG,IAAAA,SAAS,EAAE;AAAED,MAAAA,EAAE,EAAFA;AAAF;AAD6B,GAAjB,CADS;AAAA,MAC1BE,IAD0B,aAC1BA,IAD0B;;AAIlC,SACE,4BACGA,IAAI,IACH,MAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,SAAL,CAAeC,KAAzB;AAAgC,IAAA,GAAG,EAAC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQF,IAAI,CAACC,SAAL,CAAeE,IAAvB,CADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,IAAI,CAACC,SAAL,CAAeE,IAAtB,CAFF,EAGE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,IAAI,CAACC,SAAL,CAAeG,IAAtB,CAHF,EAIE,MAAC,KAAD;AAAO,IAAA,MAAM,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,EAKE,MAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcJ,IAAI,CAACC,SAAL,CAAeI,MAA7B,CALF,EAME,MAAC,KAAD;AAAO,IAAA,MAAM,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,EAOE,MAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcL,IAAI,CAACC,SAAL,CAAeK,MAAf,CAAsBH,IAApC,CAPF,CAJF,CAFJ,CADF;AAoBD,CAxBD;;AA0BA,eAAeN,eAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport {\n  ResidentDetailsContainer,\n  ResidentImage,\n  ResidentInfo\n} from './styles';\nimport { Title, Text } from '../LocationsContainer/LocationItem/styles';\n\nconst RESIDENT_QUERY = gql`\n  query Character($id: ID!) {\n    character(id: $id) {\n      id\n      image\n      name\n      status\n      type\n      origin {\n        name\n      }\n    }\n  }\n`;\n\nconst ResidentDetails = ({ id }) => {\n  const { data } = useQuery(RESIDENT_QUERY, {\n    variables: { id }\n  });\n  return (\n    <>\n      {data && (\n        <ResidentDetailsContainer>\n          <ResidentImage>\n            <img src={data.character.image} alt=\"\" />\n          </ResidentImage>\n          <ResidentInfo>\n            <Title>{data.character.name}</Title>\n            <Text>{data.character.name}</Text>\n            <Text>{data.character.type}</Text>\n            <Title margin=\"10px 0 0 0\">Status:</Title>\n            <Title light>{data.character.status}</Title>\n            <Title margin=\"10px 0 0 0\">Home Planet:</Title>\n            <Title light>{data.character.origin.name}</Title>\n          </ResidentInfo>\n        </ResidentDetailsContainer>\n      )}\n    </>\n  );\n};\n\nexport default ResidentDetails;\n"]},"metadata":{},"sourceType":"module"}