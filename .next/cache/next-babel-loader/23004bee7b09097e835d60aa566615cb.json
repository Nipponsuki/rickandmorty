{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Desktop/rickandmorty/components/LocationsContainer/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { StyledLocationsContainer } from './styles';\nimport Loader from '../Loader';\nconst LOCATIONS_QUERY = gql`\n  query Locations {\n    locations {\n      info {\n        count\n        pages\n        next\n        prev\n      }\n      results {\n        name\n        type\n      }\n    }\n  }\n`;\n\nconst LocationsContainer = () => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(LOCATIONS_QUERY);\n  return __jsx(StyledLocationsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), data && data.locations.results.map(location => __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, location.name)));\n};\n\nexport default LocationsContainer;","map":{"version":3,"sources":["/Users/alex/Desktop/rickandmorty/components/LocationsContainer/index.js"],"names":["React","useQuery","gql","StyledLocationsContainer","Loader","LOCATIONS_QUERY","LocationsContainer","data","loading","error","locations","results","map","location","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,MAAMC,eAAe,GAAGH,GAAI;;;;;;;;;;;;;;;CAA5B;;AAiBA,MAAMI,kBAAkB,GAAG,MAAM;AAC/B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BR,QAAQ,CAACI,eAAD,CAAzC;AAEA,SACA,MAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAGKE,IAAI,IACHA,IAAI,CAACG,SAAL,CAAeC,OAAf,CAAuBC,GAAvB,CAA2BC,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,QAAQ,CAACC,IAAhB,CAAvC,CAJN,CADA;AAQD,CAXD;;AAaA,eAAeR,kBAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { StyledLocationsContainer } from './styles';\n\nimport Loader from '../Loader';\n\nconst LOCATIONS_QUERY = gql`\n  query Locations {\n    locations {\n      info {\n        count\n        pages\n        next\n        prev\n      }\n      results {\n        name\n        type\n      }\n    }\n  }\n`;\n\nconst LocationsContainer = () => {\n  const { data, loading, error } = useQuery(LOCATIONS_QUERY);\n\n  return (\n\t\t<StyledLocationsContainer>\n\t\t\t<Loader/>\n      {/* {loading && <Loader />} */}\n      {data &&\n        data.locations.results.map(location => <span>{location.name}</span>)}\n    </StyledLocationsContainer>\n  );\n};\n\nexport default LocationsContainer;\n"]},"metadata":{},"sourceType":"module"}