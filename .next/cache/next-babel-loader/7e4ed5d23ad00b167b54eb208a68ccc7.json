{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Desktop/rickandmorty/components/ResidentDetails/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport Link from 'next/link';\nimport { ResidentDetailsContainer, ResidentImage, ResidentInfo } from './styles';\nimport { Title, Text } from '../LocationsContainer/LocationItem/styles';\nimport BackButton from '../Common/BackButton';\nimport Loader from '../Loader';\nconst RESIDENT_QUERY = gql`\n  query Character($id: ID!) {\n    character(id: $id) {\n      id\n      image\n      name\n      status\n      type\n      location {\n        name\n        id\n      }\n      origin {\n        name\n      }\n    }\n  }\n`;\n\nconst ResidentDetails = ({\n  id\n}) => {\n  const {\n    data,\n    loading\n  } = useQuery(RESIDENT_QUERY, {\n    variables: {\n      id\n    }\n  });\n  return __jsx(React.Fragment, null, loading && __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), data && __jsx(ResidentDetailsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(ResidentImage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: data.character.image,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(BackButton, {\n    link: `/locations/${data.character.location.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), __jsx(ResidentInfo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, data.character.name), __jsx(Link, {\n    href: `/locations/${data.character.location.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, data.character.location.name))), __jsx(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, data.character.type), __jsx(Title, {\n    margin: \"10px 0 0 0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Status:\"), __jsx(Title, {\n    light: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, data.character.status), __jsx(Title, {\n    margin: \"10px 0 0 0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Home Planet:\"), __jsx(Title, {\n    light: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, data.character.origin.name))));\n};\n\nexport default ResidentDetails;","map":{"version":3,"sources":["/Users/alex/Desktop/rickandmorty/components/ResidentDetails/index.js"],"names":["React","gql","useQuery","Link","ResidentDetailsContainer","ResidentImage","ResidentInfo","Title","Text","BackButton","Loader","RESIDENT_QUERY","ResidentDetails","id","data","loading","variables","character","image","location","name","type","status","origin"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SACEC,wBADF,EAEEC,aAFF,EAGEC,YAHF,QAIO,UAJP;AAKA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,2CAA5B;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,MAAMC,cAAc,GAAGV,GAAI;;;;;;;;;;;;;;;;;CAA3B;;AAmBA,MAAMW,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAClC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBb,QAAQ,CAACS,cAAD,EAAiB;AACjDK,IAAAA,SAAS,EAAE;AAAEH,MAAAA;AAAF;AADsC,GAAjB,CAAlC;AAGA,SACE,4BACGE,OAAO,IAAI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,EAEGD,IAAI,IACH,MAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACG,SAAL,CAAeC,KAAzB;AAAgC,IAAA,GAAG,EAAC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAG,cAAaJ,IAAI,CAACG,SAAL,CAAeE,QAAf,CAAwBN,EAAG,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQC,IAAI,CAACG,SAAL,CAAeG,IAAvB,CADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,cAAaN,IAAI,CAACG,SAAL,CAAeE,QAAf,CAAwBN,EAAG,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,IAAI,CAACG,SAAL,CAAeE,QAAf,CAAwBC,IAA/B,CADF,CADF,CAFF,EAOE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,IAAI,CAACG,SAAL,CAAeI,IAAtB,CAPF,EAQE,MAAC,KAAD;AAAO,IAAA,MAAM,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,EASE,MAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcP,IAAI,CAACG,SAAL,CAAeK,MAA7B,CATF,EAUE,MAAC,KAAD;AAAO,IAAA,MAAM,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,EAWE,MAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcR,IAAI,CAACG,SAAL,CAAeM,MAAf,CAAsBH,IAApC,CAXF,CALF,CAHJ,CADF;AA0BD,CA9BD;;AAgCA,eAAeR,eAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport Link from 'next/link';\n\nimport {\n  ResidentDetailsContainer,\n  ResidentImage,\n  ResidentInfo\n} from './styles';\nimport { Title, Text } from '../LocationsContainer/LocationItem/styles';\n\nimport BackButton from '../Common/BackButton';\nimport Loader from '../Loader';\n\nconst RESIDENT_QUERY = gql`\n  query Character($id: ID!) {\n    character(id: $id) {\n      id\n      image\n      name\n      status\n      type\n      location {\n        name\n        id\n      }\n      origin {\n        name\n      }\n    }\n  }\n`;\n\nconst ResidentDetails = ({ id }) => {\n  const { data, loading } = useQuery(RESIDENT_QUERY, {\n    variables: { id }\n  });\n  return (\n    <>\n      {loading && <Loader />}\n      {data && (\n        <ResidentDetailsContainer>\n          <ResidentImage>\n            <img src={data.character.image} alt=\"\" />\n            <BackButton link={`/locations/${data.character.location.id}`} />\n          </ResidentImage>\n          <ResidentInfo>\n            <Title>{data.character.name}</Title>\n            <Link href={`/locations/${data.character.location.id}`}>\n              <a>\n                <Text>{data.character.location.name}</Text>\n              </a>\n            </Link>\n            <Text>{data.character.type}</Text>\n            <Title margin=\"10px 0 0 0\">Status:</Title>\n            <Title light>{data.character.status}</Title>\n            <Title margin=\"10px 0 0 0\">Home Planet:</Title>\n            <Title light>{data.character.origin.name}</Title>\n          </ResidentInfo>\n        </ResidentDetailsContainer>\n      )}\n    </>\n  );\n};\n\nexport default ResidentDetails;\n"]},"metadata":{},"sourceType":"module"}