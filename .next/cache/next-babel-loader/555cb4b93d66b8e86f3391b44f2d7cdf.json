{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/alex/Desktop/rickandmorty/components/LocationDetails/index.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query Location($id: ID!) {\\n    location(id: $id) {\\n      name\\n      type\\n      id\\n      residents {\\n        image\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { DetailsImage } from './styles';\nimport { Title, Text } from '../LocationsContainer/LocationItem/styles';\nimport { getLocationImage } from 'src/utils/helpers';\nvar LOCATION_QUERY = gql(_templateObject());\n\nvar LocationDetails = function LocationDetails(_ref) {\n  var id = _ref.id;\n\n  var _useQuery = useQuery(LOCATION_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading,\n      fetchMore = _useQuery.fetchMore;\n\n  return __jsx(React.Fragment, null, data && __jsx(React.Fragment, null, __jsx(DetailsImage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: getLocationImage(data.location.type),\n    alt: data.location.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), __jsx(Title, {\n    margin: \"5px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, data.location.name), __jsx(Text, {\n    margin: \"5px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, data.location.type)));\n};\n\nexport default LocationDetails;","map":{"version":3,"sources":["/Users/alex/Desktop/rickandmorty/components/LocationDetails/index.js"],"names":["React","useQuery","gql","DetailsImage","Title","Text","getLocationImage","LOCATION_QUERY","LocationDetails","id","variables","data","error","loading","fetchMore","location","type","name"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,2CAA5B;AAEA,SAASC,gBAAT,QAAiC,mBAAjC;AAEA,IAAMC,cAAc,GAAGL,GAAH,mBAApB;;AAeA,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,OAAY;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,kBACUR,QAAQ,CAACM,cAAD,EAAiB;AACnEG,IAAAA,SAAS,EAAE;AAAED,MAAAA,EAAE,EAAFA;AAAF;AADwD,GAAjB,CADlB;AAAA,MAC1BE,IAD0B,aAC1BA,IAD0B;AAAA,MACpBC,KADoB,aACpBA,KADoB;AAAA,MACbC,OADa,aACbA,OADa;AAAA,MACJC,SADI,aACJA,SADI;;AAKlC,SACE,4BACGH,IAAI,IACH,4BACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEL,gBAAgB,CAACK,IAAI,CAACI,QAAL,CAAcC,IAAf,CADvB;AAEE,IAAA,GAAG,EAAEL,IAAI,CAACI,QAAL,CAAcC,IAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAOE,MAAC,KAAD;AAAO,IAAA,MAAM,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBL,IAAI,CAACI,QAAL,CAAcE,IAAnC,CAPF,EAQE,MAAC,IAAD;AAAM,IAAA,MAAM,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBN,IAAI,CAACI,QAAL,CAAcC,IAAlC,CARF,CAFJ,CADF;AAgBD,CArBD;;AAuBA,eAAeR,eAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { DetailsImage } from './styles';\nimport { Title, Text } from '../LocationsContainer/LocationItem/styles';\n\nimport { getLocationImage } from 'src/utils/helpers';\n\nconst LOCATION_QUERY = gql`\n  query Location($id: ID!) {\n    location(id: $id) {\n      name\n      type\n      id\n      residents {\n        image\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst LocationDetails = ({ id }) => {\n  const { data, error, loading, fetchMore } = useQuery(LOCATION_QUERY, {\n    variables: { id }\n  });\n\n  return (\n    <>\n      {data && (\n        <>\n          <DetailsImage>\n            <img\n              src={getLocationImage(data.location.type)}\n              alt={data.location.type}\n            />\n          </DetailsImage>\n          <Title margin=\"5px\">{data.location.name}</Title>\n          <Text margin=\"5px\">{data.location.type}</Text>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default LocationDetails;\n"]},"metadata":{},"sourceType":"module"}