{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Desktop/rickandmorty/components/LocationDetails/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Link from 'next/link';\nimport { DetailsImage } from './styles';\nimport { Title, Text } from '../LocationsContainer/LocationItem/styles';\nimport { StyledLocationsContainer } from '../LocationsContainer/styles';\nimport { getLocationImage } from 'src/utils/helpers';\nimport ResidentItem from './ResidentItem';\nconst LOCATION_QUERY = gql`\n  query Location($id: ID!) {\n    location(id: $id) {\n      name\n      type\n      id\n      residents {\n        image\n        id\n        name\n        type\n      }\n    }\n  }\n`;\n\nconst LocationDetails = ({\n  id\n}) => {\n  const {\n    data,\n    error,\n    loading,\n    fetchMore\n  } = useQuery(LOCATION_QUERY, {\n    variables: {\n      id\n    }\n  });\n\n  const loadMore = () => {\n    if (data.location.residents.info.next) {\n      fetchMore({\n        variables: {\n          page: data.location.residents.info.next\n        },\n        updateQuery: (prev, {\n          fetchMoreResult\n        }) => {\n          if (!fetchMoreResult) return prev;\n          return {\n            locations: _objectSpread({}, prev.residents, {\n              info: _objectSpread({}, fetchMoreResult.residents.info),\n              results: prev.locations.residents.concat(fetchMoreResult.residents.results)\n            })\n          };\n        }\n      });\n    }\n\n    return;\n  };\n\n  return __jsx(React.Fragment, null, data && __jsx(React.Fragment, null, __jsx(DetailsImage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: getLocationImage(data.location.type),\n    alt: data.location.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), __jsx(Title, {\n    margin: \"45px 5px 5px 5px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, data.location.name), __jsx(Text, {\n    margin: \"5px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, data.location.type), __jsx(Title, {\n    textAlign: \"center\",\n    margin: \"25px 0 0 0 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Residents\"), __jsx(StyledLocationsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, data && data.location.residents.map(resident => __jsx(Link, {\n    href: `/residents/${resident.id}`,\n    key: resident.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(ResidentItem, {\n    resident: resident,\n    locationType: data.location.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })))))));\n};\n\nexport default LocationDetails;","map":{"version":3,"sources":["/Users/alex/Desktop/rickandmorty/components/LocationDetails/index.js"],"names":["React","useQuery","gql","Link","DetailsImage","Title","Text","StyledLocationsContainer","getLocationImage","ResidentItem","LOCATION_QUERY","LocationDetails","id","data","error","loading","fetchMore","variables","loadMore","location","residents","info","next","page","updateQuery","prev","fetchMoreResult","locations","results","concat","type","name","map","resident"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Link from 'next/link';\n\nimport { DetailsImage } from './styles';\nimport { Title, Text } from '../LocationsContainer/LocationItem/styles';\nimport { StyledLocationsContainer } from '../LocationsContainer/styles';\n\nimport { getLocationImage } from 'src/utils/helpers';\n\nimport ResidentItem from './ResidentItem';\n\nconst LOCATION_QUERY = gql`\n  query Location($id: ID!) {\n    location(id: $id) {\n      name\n      type\n      id\n      residents {\n        image\n        id\n        name\n        type\n      }\n    }\n  }\n`;\n\nconst LocationDetails = ({ id }) => {\n  const { data, error, loading, fetchMore } = useQuery(LOCATION_QUERY, {\n    variables: { id }\n  });\n\n  const loadMore = () => {\n    if (data.location.residents.info.next) {\n      fetchMore({\n        variables: {\n          page: data.location.residents.info.next\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult) return prev;\n          return {\n            locations: {\n              ...prev.residents,\n              info: { ...fetchMoreResult.residents.info },\n              results: prev.locations.residents.concat(\n                fetchMoreResult.residents.results\n              )\n            }\n          };\n        }\n      });\n    }\n    return;\n  };\n\n  return (\n    <>\n      {data && (\n        <>\n          <DetailsImage>\n            <img\n              src={getLocationImage(data.location.type)}\n              alt={data.location.type}\n            />\n          </DetailsImage>\n          <Title margin=\"45px 5px 5px 5px\">{data.location.name}</Title>\n          <Text margin=\"5px\">{data.location.type}</Text>\n          <Title textAlign=\"center\" margin=\"25px 0 0 0 \">\n            Residents\n          </Title>\n          <StyledLocationsContainer>\n            {data &&\n              data.location.residents.map(resident => (\n                <Link href={`/residents/${resident.id}`} key={resident.id}>\n                  <a>\n                    <ResidentItem\n                      resident={resident}\n                      locationType={data.location.type}\n                    />\n                  </a>\n                </Link>\n              ))}\n          </StyledLocationsContainer>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default LocationDetails;\n"]},"metadata":{},"sourceType":"module"}