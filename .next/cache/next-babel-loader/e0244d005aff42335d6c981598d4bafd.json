{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/alex/Desktop/rickandmorty/components/ResidentDetails/index.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query Character($id: ID!) {\\n    character(id: $id) {\\n      id\\n      image\\n      name\\n      status\\n      origin {\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nvar RESIDENT_QUERY = gql(_templateObject());\n\nvar ResidentDetails = function ResidentDetails(_ref) {\n  var id = _ref.id;\n\n  var _useQuery = useQuery(RESIDENT_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data;\n\n  return __jsx(React.Fragment, null, data && data.character.image && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: data.character.image,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })));\n};\n\nexport default ResidentDetails;","map":{"version":3,"sources":["/Users/alex/Desktop/rickandmorty/components/ResidentDetails/index.js"],"names":["React","gql","useQuery","RESIDENT_QUERY","ResidentDetails","id","variables","data","character","image"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,IAAMC,cAAc,GAAGF,GAAH,mBAApB;;AAcA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,OAAY;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,kBACjBH,QAAQ,CAACC,cAAD,EAAiB;AACxCG,IAAAA,SAAS,EAAE;AAAED,MAAAA,EAAE,EAAFA;AAAF;AAD6B,GAAjB,CADS;AAAA,MAC1BE,IAD0B,aAC1BA,IAD0B;;AAIlC,SACE,4BACGA,IAAI,IAAIA,IAAI,CAACC,SAAL,CAAeC,KAAvB,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEF,IAAI,CAACC,SAAL,CAAeC,KAAzB;AAAgC,IAAA,GAAG,EAAC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF;AASD,CAbD;;AAeA,eAAeL,eAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst RESIDENT_QUERY = gql`\n  query Character($id: ID!) {\n    character(id: $id) {\n      id\n      image\n      name\n      status\n      origin {\n        name\n      }\n    }\n  }\n`;\n\nconst ResidentDetails = ({ id }) => {\n  const { data } = useQuery(RESIDENT_QUERY, {\n    variables: { id }\n  });\n  return (\n    <>\n      {data && data.character.image && (\n        <div>\n          <img src={data.character.image} alt=\"\" />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ResidentDetails;\n"]},"metadata":{},"sourceType":"module"}