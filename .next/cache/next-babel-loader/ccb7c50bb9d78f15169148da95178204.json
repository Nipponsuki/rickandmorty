{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/alex/Desktop/rickandmorty/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query Locations {\\n    locations {\\n      info {\\n        count\\n        pages\\n        next\\n        prev\\n      }\\n      results {\\n        name\\n        type\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nvar LOCATIONS_QUERY = gql(_templateObject());\n\nvar Home = function Home() {\n  var _useQuery = useQuery(LOCATIONS_QUERY),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  console.log(data);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, JSON.stringify(data));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/alex/Desktop/rickandmorty/pages/index.js"],"names":["React","gql","useQuery","LOCATIONS_QUERY","Home","data","loading","error","console","log","JSON","stringify"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,IAAMC,eAAe,GAAGF,GAAH,mBAArB;;AAiBA,IAAMG,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,kBACgBF,QAAQ,CAACC,eAAD,CADxB;AAAA,MACTE,IADS,aACTA,IADS;AAAA,MACHC,OADG,aACHA,OADG;AAAA,MACMC,KADN,aACMA,KADN;;AAEjBC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMK,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAN,CAAP;AACD,CALD;;AAOA,eAAeD,IAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst LOCATIONS_QUERY = gql`\n  query Locations {\n    locations {\n      info {\n        count\n        pages\n        next\n        prev\n      }\n      results {\n        name\n        type\n      }\n    }\n  }\n`;\n\nconst Home = () => {\n  const { data, loading, error } = useQuery(LOCATIONS_QUERY);\n  console.log(data);\n\n  return <div>{JSON.stringify(data)}</div>;\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}