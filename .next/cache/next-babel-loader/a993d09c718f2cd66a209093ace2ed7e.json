{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/alex/Desktop/rickandmorty/components/LocationsContainer/index.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query Locations {\\n    locations {\\n      info {\\n        count\\n        pages\\n        next\\n        prev\\n      }\\n      results {\\n        name\\n        type\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { StyledLocationsContainer, ErrorMessage } from './styles';\nimport Loader from 'src/components/Loader';\nimport LocationItem from './LocationItem';\nvar LOCATIONS_QUERY = gql(_templateObject());\n\nvar LocationsContainer = function LocationsContainer() {\n  var _useQuery = useQuery(LOCATIONS_QUERY),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  return __jsx(StyledLocationsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, error && __jsx(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), loading && __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), data && data.locations.results.map(function (location) {\n    return __jsx(LocationItem, {\n      key: location.id,\n      location: location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default LocationsContainer;","map":{"version":3,"sources":["/Users/alex/Desktop/rickandmorty/components/LocationsContainer/index.js"],"names":["React","useQuery","gql","StyledLocationsContainer","ErrorMessage","Loader","LocationItem","LOCATIONS_QUERY","LocationsContainer","data","loading","error","locations","results","map","location","id"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,wBAAT,EAAmCC,YAAnC,QAAuD,UAAvD;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,eAAe,GAAGL,GAAH,mBAArB;;AAkBA,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAAA,kBACEP,QAAQ,CAACM,eAAD,CADV;AAAA,MACvBE,IADuB,aACvBA,IADuB;AAAA,MACjBC,OADiB,aACjBA,OADiB;AAAA,MACRC,KADQ,aACRA,KADQ;;AAG/B,SACE,MAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,IAAI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,EAEGD,OAAO,IAAI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFd,EAGGD,IAAI,IACHA,IAAI,CAACG,SAAL,CAAeC,OAAf,CAAuBC,GAAvB,CAA2B,UAAAC,QAAQ;AAAA,WACjC,MAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,QAAQ,CAACC,EAA5B;AAAgC,MAAA,QAAQ,EAAED,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiC;AAAA,GAAnC,CAJJ,CADF;AAUD,CAbD;;AAeA,eAAeP,kBAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { StyledLocationsContainer, ErrorMessage } from './styles';\n\nimport Loader from 'src/components/Loader';\nimport LocationItem from './LocationItem';\n\nconst LOCATIONS_QUERY = gql`\n  query Locations {\n    locations {\n      info {\n        count\n        pages\n        next\n        prev\n      }\n      results {\n        name\n        type\n        id\n      }\n    }\n  }\n`;\n\nconst LocationsContainer = () => {\n  const { data, loading, error } = useQuery(LOCATIONS_QUERY);\n\n  return (\n    <StyledLocationsContainer>\n      {error && <ErrorMessage />}\n      {loading && <Loader />}\n      {data &&\n        data.locations.results.map(location => (\n          <LocationItem key={location.id} location={location} />\n        ))}\n    </StyledLocationsContainer>\n  );\n};\n\nexport default LocationsContainer;\n"]},"metadata":{},"sourceType":"module"}