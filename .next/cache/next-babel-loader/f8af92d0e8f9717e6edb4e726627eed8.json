{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Desktop/rickandmorty/components/LocationDetails/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { DetailsImage } from './styles';\nimport { getLocationImage } from 'src/utils/helpers';\nconst LOCATION_QUERY = gql`\n  query Location($id: ID!) {\n    location(id: $id) {\n      name\n      type\n      residents {\n        image\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst LocationDetails = ({\n  id\n}) => {\n  const {\n    data,\n    error,\n    loading,\n    fetchMore\n  } = useQuery(LOCATION_QUERY, {\n    variables: {\n      id\n    }\n  });\n  return __jsx(React.Fragment, null, data && __jsx(DetailsImage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: getLocationImage(data.location.type),\n    alt: data.location.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n};\n\nexport default LocationDetails;","map":{"version":3,"sources":["/Users/alex/Desktop/rickandmorty/components/LocationDetails/index.js"],"names":["React","useQuery","gql","DetailsImage","getLocationImage","LOCATION_QUERY","LocationDetails","id","data","error","loading","fetchMore","variables","location","type"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,YAAT,QAA6B,UAA7B;AAEA,SAASC,gBAAT,QAAiC,mBAAjC;AAEA,MAAMC,cAAc,GAAGH,GAAI;;;;;;;;;;;;CAA3B;;AAcA,MAAMI,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAClC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,MAAsCV,QAAQ,CAACI,cAAD,EAAiB;AACnEO,IAAAA,SAAS,EAAE;AAAEL,MAAAA;AAAF;AADwD,GAAjB,CAApD;AAIA,SACE,4BACGC,IAAI,IACH,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEJ,gBAAgB,CAACI,IAAI,CAACK,QAAL,CAAcC,IAAf,CADvB;AAEE,IAAA,GAAG,EAAEN,IAAI,CAACK,QAAL,CAAcC,IAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF;AAYD,CAjBD;;AAmBA,eAAeR,eAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { DetailsImage } from './styles';\n\nimport { getLocationImage } from 'src/utils/helpers';\n\nconst LOCATION_QUERY = gql`\n  query Location($id: ID!) {\n    location(id: $id) {\n      name\n      type\n      residents {\n        image\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst LocationDetails = ({ id }) => {\n  const { data, error, loading, fetchMore } = useQuery(LOCATION_QUERY, {\n    variables: { id }\n  });\n\n  return (\n    <>\n      {data && (\n        <DetailsImage>\n          <img\n            src={getLocationImage(data.location.type)}\n            alt={data.location.type}\n          />\n        </DetailsImage>\n      )}\n    </>\n  );\n};\n\nexport default LocationDetails;\n"]},"metadata":{},"sourceType":"module"}