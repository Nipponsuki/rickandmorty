{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/alex/Desktop/rickandmorty/components/LocationsContainer/LocationItem/index.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query Location($id: ID!) {\\n    location(id: $id) {\\n      residents {\\n        image\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { memo } from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { ItemContainer, ItemInfo, ItemImage, Title, Text, LocationItemResidentsContainer, LocationItemResident } from './styles';\nimport { getLocationImage } from 'src/utils/helpers';\nvar LOCATION_QUERY = gql(_templateObject());\nvar LocationItem = memo(function (_ref) {\n  var _ref$location = _ref.location,\n      id = _ref$location.id,\n      name = _ref$location.name,\n      type = _ref$location.type;\n\n  var _useQuery = useQuery(LOCATION_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data;\n\n  return __jsx(ItemContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(ItemImage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: getLocationImage(type),\n    alt: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), __jsx(ItemInfo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, name), __jsx(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, type), __jsx(LocationItemResidentsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, data && data.location.residents.slice(0, 3).map(function (resident) {\n    return __jsx(React.Fragment, {\n      key: resident.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, resident.image && __jsx(LocationItemResident, {\n      key: resident.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: resident.image,\n      alt: resident.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })));\n  }))));\n});\nexport default LocationItem;","map":{"version":3,"sources":["/Users/alex/Desktop/rickandmorty/components/LocationsContainer/LocationItem/index.js"],"names":["React","memo","gql","useQuery","ItemContainer","ItemInfo","ItemImage","Title","Text","LocationItemResidentsContainer","LocationItemResident","getLocationImage","LOCATION_QUERY","LocationItem","location","id","name","type","variables","data","residents","slice","map","resident","image"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SACEC,aADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,KAJF,EAKEC,IALF,EAMEC,8BANF,EAOEC,oBAPF,QAQO,UARP;AAUA,SAASC,gBAAT,QAAiC,mBAAjC;AAEA,IAAMC,cAAc,GAAGV,GAAH,mBAApB;AAYA,IAAMW,YAAY,GAAGZ,IAAI,CAAC,gBAAsC;AAAA,2BAAnCa,QAAmC;AAAA,MAAvBC,EAAuB,iBAAvBA,EAAuB;AAAA,MAAnBC,IAAmB,iBAAnBA,IAAmB;AAAA,MAAbC,IAAa,iBAAbA,IAAa;;AAAA,kBAC7Cd,QAAQ,CAACS,cAAD,EAAiB;AACxCM,IAAAA,SAAS,EAAE;AAAEH,MAAAA,EAAE,EAAFA;AAAF;AAD6B,GAAjB,CADqC;AAAA,MACtDI,IADsD,aACtDA,IADsD;;AAI9D,SACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAER,gBAAgB,CAACM,IAAD,CAA1B;AAAkC,IAAA,GAAG,EAAEA,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQD,IAAR,CADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,IAAP,CAFF,EAGE,MAAC,8BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,IAAI,IACHA,IAAI,CAACL,QAAL,CAAcM,SAAd,CAAwBC,KAAxB,CAA8B,CAA9B,EAAiC,CAAjC,EAAoCC,GAApC,CAAwC,UAAAC,QAAQ;AAAA,WAC9C,MAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEA,QAAQ,CAACR,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGQ,QAAQ,CAACC,KAAT,IACC,MAAC,oBAAD;AAAsB,MAAA,GAAG,EAAED,QAAQ,CAACR,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEQ,QAAQ,CAACC,KAAnB;AAA0B,MAAA,GAAG,EAAED,QAAQ,CAACP,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,CAD8C;AAAA,GAAhD,CAFJ,CAHF,CAJF,CADF;AAuBD,CA3BwB,CAAzB;AA6BA,eAAeH,YAAf","sourcesContent":["import React, { memo } from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport {\n  ItemContainer,\n  ItemInfo,\n  ItemImage,\n  Title,\n  Text,\n  LocationItemResidentsContainer,\n  LocationItemResident\n} from './styles';\n\nimport { getLocationImage } from 'src/utils/helpers';\n\nconst LOCATION_QUERY = gql`\n  query Location($id: ID!) {\n    location(id: $id) {\n      residents {\n        image\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst LocationItem = memo(({ location: { id, name, type } }) => {\n  const { data } = useQuery(LOCATION_QUERY, {\n    variables: { id }\n  });\n  return (\n    <ItemContainer>\n      <ItemImage>\n        <img src={getLocationImage(type)} alt={type} />\n      </ItemImage>\n      <ItemInfo>\n        <Title>{name}</Title>\n        <Text>{type}</Text>\n        <LocationItemResidentsContainer>\n          {data &&\n            data.location.residents.slice(0, 3).map(resident => (\n              <React.Fragment key={resident.id}>\n                {resident.image && (\n                  <LocationItemResident key={resident.id}>\n                    <img src={resident.image} alt={resident.name} />\n                  </LocationItemResident>\n                )}\n              </React.Fragment>\n            ))}\n        </LocationItemResidentsContainer>\n      </ItemInfo>\n    </ItemContainer>\n  );\n});\n\nexport default LocationItem;\n"]},"metadata":{},"sourceType":"module"}