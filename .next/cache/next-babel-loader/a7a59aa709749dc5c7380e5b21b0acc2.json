{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/alex/Desktop/rickandmorty/components/LocationsContainer/index.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query Locations($page: Int!) {\\n    locations(page: $page) {\\n      info {\\n        count\\n        pages\\n        next\\n        prev\\n      }\\n      results {\\n        name\\n        type\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { StyledLocationsContainer, ErrorMessage } from './styles';\nimport Loader from 'src/components/Loader';\nimport LocationItem from './LocationItem';\nimport { useInfiniteScroll } from 'src/hooks/useInfiniteScroll';\nvar LOCATIONS_QUERY = gql(_templateObject());\n\nvar LocationsContainer = function LocationsContainer() {\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentPage = _React$useState2[0],\n      setCurrentPage = _React$useState2[1];\n\n  var _useQuery = useQuery(LOCATIONS_QUERY, {\n    variables: {\n      page: currentPage\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      refetch = _useQuery.refetch,\n      loading = _useQuery.loading;\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      locations = _React$useState4[0],\n      setLocations = _React$useState4[1];\n\n  React.useEffect(function () {\n    setLocations(function (prevState) {\n      return prevState.concat(data && data.locations.results || []);\n    });\n  }, [data]);\n\n  var loadMore = function loadMore() {\n    if (data.locations.info.next) {\n      setCurrentPage(function (prev) {\n        return prev += 1;\n      });\n      refetch();\n      setLocations(function (prevState) {\n        return data && [].concat(_toConsumableArray(prevState), _toConsumableArray(data.locations.results));\n      });\n    }\n\n    return;\n  };\n\n  useInfiniteScroll(loadMore);\n  return __jsx(React.Fragment, null, __jsx(StyledLocationsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, error && __jsx(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), locations && locations.map(function (location) {\n    return __jsx(Link, {\n      href: \"/locations/\".concat(location.id),\n      key: location.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(LocationItem, {\n      location: location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })));\n  }), loading && __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })));\n};\n\nexport default LocationsContainer;","map":{"version":3,"sources":["/Users/alex/Desktop/rickandmorty/components/LocationsContainer/index.js"],"names":["React","Link","useQuery","gql","StyledLocationsContainer","ErrorMessage","Loader","LocationItem","useInfiniteScroll","LOCATIONS_QUERY","LocationsContainer","useState","currentPage","setCurrentPage","variables","page","data","error","refetch","loading","locations","setLocations","useEffect","prevState","concat","results","loadMore","info","next","prev","map","location","id"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,wBAAT,EAAmCC,YAAnC,QAAuD,UAAvD;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AAEA,IAAMC,eAAe,GAAGN,GAAH,mBAArB;;AAkBA,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAAA,wBACOV,KAAK,CAACW,QAAN,CAAe,CAAf,CADP;AAAA;AAAA,MACxBC,WADwB;AAAA,MACXC,cADW;;AAAA,kBAEWX,QAAQ,CAACO,eAAD,EAAkB;AAClEK,IAAAA,SAAS,EAAE;AAAEC,MAAAA,IAAI,EAAEH;AAAR;AADuD,GAAlB,CAFnB;AAAA,MAEvBI,IAFuB,aAEvBA,IAFuB;AAAA,MAEjBC,KAFiB,aAEjBA,KAFiB;AAAA,MAEVC,OAFU,aAEVA,OAFU;AAAA,MAEDC,OAFC,aAEDA,OAFC;;AAAA,yBAKGnB,KAAK,CAACW,QAAN,CAAe,EAAf,CALH;AAAA;AAAA,MAKxBS,SALwB;AAAA,MAKbC,YALa;;AAO/BrB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,YAAM;AACpBD,IAAAA,YAAY,CAAC,UAAAE,SAAS;AAAA,aACpBA,SAAS,CAACC,MAAV,CAAkBR,IAAI,IAAIA,IAAI,CAACI,SAAL,CAAeK,OAAxB,IAAoC,EAArD,CADoB;AAAA,KAAV,CAAZ;AAGD,GAJD,EAIG,CAACT,IAAD,CAJH;;AAMA,MAAMU,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAIV,IAAI,CAACI,SAAL,CAAeO,IAAf,CAAoBC,IAAxB,EAA8B;AAC5Bf,MAAAA,cAAc,CAAC,UAAAgB,IAAI;AAAA,eAAKA,IAAI,IAAI,CAAb;AAAA,OAAL,CAAd;AACAX,MAAAA,OAAO;AACPG,MAAAA,YAAY,CACV,UAAAE,SAAS;AAAA,eAAIP,IAAI,iCAAQO,SAAR,sBAAsBP,IAAI,CAACI,SAAL,CAAeK,OAArC,EAAR;AAAA,OADC,CAAZ;AAGD;;AACD;AACD,GATD;;AAUAjB,EAAAA,iBAAiB,CAACkB,QAAD,CAAjB;AAEA,SACE,4BACE,MAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,IAAI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,EAEGG,SAAS,IACRA,SAAS,CAACU,GAAV,CAAc,UAAAC,QAAQ;AAAA,WACpB,MAAC,IAAD;AAAM,MAAA,IAAI,uBAAgBA,QAAQ,CAACC,EAAzB,CAAV;AAAyC,MAAA,GAAG,EAAED,QAAQ,CAACC,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAc,MAAA,QAAQ,EAAED,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADoB;AAAA,GAAtB,CAHJ,EAUGZ,OAAO,IAAI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVd,CADF,CADF;AAgBD,CAzCD;;AA2CA,eAAeT,kBAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { StyledLocationsContainer, ErrorMessage } from './styles';\n\nimport Loader from 'src/components/Loader';\nimport LocationItem from './LocationItem';\nimport { useInfiniteScroll } from 'src/hooks/useInfiniteScroll';\n\nconst LOCATIONS_QUERY = gql`\n  query Locations($page: Int!) {\n    locations(page: $page) {\n      info {\n        count\n        pages\n        next\n        prev\n      }\n      results {\n        name\n        type\n        id\n      }\n    }\n  }\n`;\n\nconst LocationsContainer = () => {\n  const [currentPage, setCurrentPage] = React.useState(0);\n  const { data, error, refetch, loading } = useQuery(LOCATIONS_QUERY, {\n    variables: { page: currentPage }\n  });\n  const [locations, setLocations] = React.useState([]);\n\n  React.useEffect(() => {\n    setLocations(prevState =>\n      prevState.concat((data && data.locations.results) || [])\n    );\n  }, [data]);\n\n  const loadMore = () => {\n    if (data.locations.info.next) {\n      setCurrentPage(prev => (prev += 1));\n      refetch();\n      setLocations(\n        prevState => data && [...prevState, ...data.locations.results]\n      );\n    }\n    return;\n  };\n  useInfiniteScroll(loadMore);\n\n  return (\n    <>\n      <StyledLocationsContainer>\n        {error && <ErrorMessage />}\n        {locations &&\n          locations.map(location => (\n            <Link href={`/locations/${location.id}`} key={location.id}>\n              <a>\n                <LocationItem location={location} />\n              </a>\n            </Link>\n          ))}\n        {loading && <Loader />}\n      </StyledLocationsContainer>\n    </>\n  );\n};\n\nexport default LocationsContainer;\n"]},"metadata":{},"sourceType":"module"}