{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query Locations {\\n    locations {\\n      info {\\n        count\\n        pages\\n        next\\n        prev\\n      }\\n      results {\\n        name\\n        type\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nvar LOCATIONS_QUERY = gql(_templateObject());\n\nvar LocationsContainer = function LocationsContainer() {\n  var _useQuery = useQuery(LOCATIONS_QUERY),\n      _useQuery$data = _useQuery.data,\n      _useQuery$data$locati = _useQuery$data.locations,\n      info = _useQuery$data$locati.info,\n      locations = _useQuery$data$locati.results,\n      loading = _useQuery$data.loading,\n      error = _useQuery$data.error;\n\n  console.log(locations);\n  return __jsx(React.Fragment, null, data && JSON.stringify(locations));\n};\n\nexport default LocationsContainer;","map":{"version":3,"sources":["/Users/alex/Desktop/rickandmorty/components/LocationsContainer/index.js"],"names":["React","useQuery","gql","LOCATIONS_QUERY","LocationsContainer","data","locations","info","results","loading","error","console","log","JSON","stringify"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,eAAe,GAAGD,GAAH,mBAArB;;AAkBA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAAA,kBAE5BH,QAAQ,CAACE,eAAD,CAFoB;AAAA,iCACxBE,IADwB;AAAA,6CACjBC,SADiB;AAAA,MACJC,IADI,yBACJA,IADI;AAAA,MACWD,SADX,yBACEE,OADF;AAAA,MACwBC,OADxB,kBACwBA,OADxB;AAAA,MACiCC,KADjC,kBACiCA,KADjC;;AAG/BC,EAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AAED,SACC,4BACED,IAAI,IAAIQ,IAAI,CAACC,SAAL,CAAeR,SAAf,CADV,CADD;AAKA,CAVD;;AAYA,eAAeF,kBAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nconst LOCATIONS_QUERY = gql`\n  query Locations {\n    locations {\n      info {\n        count\n        pages\n        next\n        prev\n      }\n      results {\n        name\n        type\n      }\n    }\n  }\n`;\n\n\nconst LocationsContainer = () => {\n\tconst { data: {locations: { info, results: locations }, loading, error\n}} = useQuery(LOCATIONS_QUERY);\n  console.log(locations);\n\n\treturn (\n\t\t<>\n\t\t\t{data && JSON.stringify(locations)}\n\t\t</>\n\t)\n};\n\nexport default LocationsContainer;\n"]},"metadata":{},"sourceType":"module"}