{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/alex/Desktop/rickandmorty/components/LocationsContainer/index.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query Locations($page: Int!) {\\n    locations(page: $page) {\\n      info {\\n        count\\n        pages\\n        next\\n        prev\\n      }\\n      results {\\n        name\\n        type\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { StyledLocationsContainer, ErrorMessage } from './styles';\nimport Loader from 'src/components/Loader';\nimport LocationItem from './LocationItem';\nimport Link from 'next/link';\nvar LOCATIONS_QUERY = gql(_templateObject());\n\nvar LocationsContainer = function LocationsContainer() {\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentPage = _React$useState2[0],\n      setCurrentPage = _React$useState2[1];\n\n  var _useQuery = useQuery(LOCATIONS_QUERY, {\n    variables: {\n      page: currentPage\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      refetch = _useQuery.refetch;\n\n  var loadMore = function loadMore() {\n    setCurrentPage(function (prev) {\n      return prev += 1;\n    });\n    refetch();\n  };\n\n  console.log(data);\n  return __jsx(StyledLocationsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, error && __jsx(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), loading && __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"button\",\n    onClick: loadMore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"More\"), data && data.locations.results.map(function (location) {\n    return __jsx(Link, {\n      href: \"/locations/\".concat(location.id),\n      key: location.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(LocationItem, {\n      location: location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }));\n};\n\nexport default LocationsContainer;","map":{"version":3,"sources":["/Users/alex/Desktop/rickandmorty/components/LocationsContainer/index.js"],"names":["React","useQuery","gql","StyledLocationsContainer","ErrorMessage","Loader","LocationItem","Link","LOCATIONS_QUERY","LocationsContainer","useState","currentPage","setCurrentPage","variables","page","data","loading","error","refetch","loadMore","prev","console","log","locations","results","map","location","id"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,wBAAT,EAAmCC,YAAnC,QAAuD,UAAvD;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,IAAMC,eAAe,GAAGN,GAAH,mBAArB;;AAkBA,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAAA,wBACOT,KAAK,CAACU,QAAN,CAAe,CAAf,CADP;AAAA;AAAA,MACxBC,WADwB;AAAA,MACXC,cADW;;AAAA,kBAEWX,QAAQ,CAACO,eAAD,EAAkB;AAClEK,IAAAA,SAAS,EAAE;AAAEC,MAAAA,IAAI,EAAEH;AAAR;AADuD,GAAlB,CAFnB;AAAA,MAEvBI,IAFuB,aAEvBA,IAFuB;AAAA,MAEjBC,OAFiB,aAEjBA,OAFiB;AAAA,MAERC,KAFQ,aAERA,KAFQ;AAAA,MAEDC,OAFC,aAEDA,OAFC;;AAM/B,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBP,IAAAA,cAAc,CAAC,UAAAQ,IAAI;AAAA,aAAKA,IAAI,IAAI,CAAb;AAAA,KAAL,CAAd;AACAF,IAAAA,OAAO;AACR,GAHD;;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,SACE,MAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,IAAI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,EAEGD,OAAO,IAAI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFd,EAGE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEG,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAMGJ,IAAI,IACHA,IAAI,CAACQ,SAAL,CAAeC,OAAf,CAAuBC,GAAvB,CAA2B,UAAAC,QAAQ;AAAA,WACjC,MAAC,IAAD;AAAM,MAAA,IAAI,uBAAgBA,QAAQ,CAACC,EAAzB,CAAV;AAAyC,MAAA,GAAG,EAAED,QAAQ,CAACC,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAc,MAAA,QAAQ,EAAED,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADiC;AAAA,GAAnC,CAPJ,CADF;AAiBD,CA5BD;;AA8BA,eAAejB,kBAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { StyledLocationsContainer, ErrorMessage } from './styles';\n\nimport Loader from 'src/components/Loader';\nimport LocationItem from './LocationItem';\nimport Link from 'next/link';\n\nconst LOCATIONS_QUERY = gql`\n  query Locations($page: Int!) {\n    locations(page: $page) {\n      info {\n        count\n        pages\n        next\n        prev\n      }\n      results {\n        name\n        type\n        id\n      }\n    }\n  }\n`;\n\nconst LocationsContainer = () => {\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const { data, loading, error, refetch } = useQuery(LOCATIONS_QUERY, {\n    variables: { page: currentPage }\n  });\n\n  const loadMore = () => {\n    setCurrentPage(prev => (prev += 1));\n    refetch();\n  };\n  console.log(data);\n  return (\n    <StyledLocationsContainer>\n      {error && <ErrorMessage />}\n      {loading && <Loader />}\n      <button type=\"button\" onClick={loadMore}>\n        More\n      </button>\n      {data &&\n        data.locations.results.map(location => (\n          <Link href={`/locations/${location.id}`} key={location.id}>\n            <a>\n              <LocationItem location={location} />\n            </a>\n          </Link>\n        ))}\n    </StyledLocationsContainer>\n  );\n};\n\nexport default LocationsContainer;\n"]},"metadata":{},"sourceType":"module"}