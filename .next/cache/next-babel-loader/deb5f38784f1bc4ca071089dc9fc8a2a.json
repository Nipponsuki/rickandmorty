{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/alex/Desktop/rickandmorty/components/LocationDetails/index.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query Location($id: ID!) {\\n    location(id: $id) {\\n      name\\n      type\\n      id\\n      residents {\\n        image\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Link from 'next/link';\nimport { DetailsImage } from './styles';\nimport { Title, Text } from '../LocationsContainer/LocationItem/styles';\nimport { StyledLocationsContainer } from '../LocationsContainer/styles';\nimport { getLocationImage } from 'src/utils/helpers';\nimport ResidentItem from './ResidentItem';\nvar LOCATION_QUERY = gql(_templateObject());\n\nvar LocationDetails = function LocationDetails(_ref) {\n  var id = _ref.id;\n\n  var _useQuery = useQuery(LOCATION_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading,\n      fetchMore = _useQuery.fetchMore;\n\n  return __jsx(React.Fragment, null, data && __jsx(React.Fragment, null, __jsx(DetailsImage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: getLocationImage(data.location.type),\n    alt: data.location.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), __jsx(Title, {\n    margin: \"45px 5px 5px 5px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, data.location.name), __jsx(Text, {\n    margin: \"5px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, data.location.type), __jsx(Title, {\n    textAlign: \"center\",\n    margin: \"25px 0 0 0 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Residents\"), __jsx(StyledLocationsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, data.location.residents.map(function (resident) {\n    return __jsx(Link, {\n      href: \"/residents/\".concat(resident.id),\n      key: resident.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(ResidentItem, {\n      resident: resident,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n  }))));\n};\n\nexport default LocationDetails;","map":{"version":3,"sources":["/Users/alex/Desktop/rickandmorty/components/LocationDetails/index.js"],"names":["React","useQuery","gql","Link","DetailsImage","Title","Text","StyledLocationsContainer","getLocationImage","ResidentItem","LOCATION_QUERY","LocationDetails","id","variables","data","error","loading","fetchMore","location","type","name","residents","map","resident"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,2CAA5B;AACA,SAASC,wBAAT,QAAyC,8BAAzC;AAEA,SAASC,gBAAT,QAAiC,mBAAjC;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,cAAc,GAAGR,GAAH,mBAApB;;AAeA,IAAMS,eAAe,GAAG,SAAlBA,eAAkB,OAAY;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,kBACUX,QAAQ,CAACS,cAAD,EAAiB;AACnEG,IAAAA,SAAS,EAAE;AAAED,MAAAA,EAAE,EAAFA;AAAF;AADwD,GAAjB,CADlB;AAAA,MAC1BE,IAD0B,aAC1BA,IAD0B;AAAA,MACpBC,KADoB,aACpBA,KADoB;AAAA,MACbC,OADa,aACbA,OADa;AAAA,MACJC,SADI,aACJA,SADI;;AAKlC,SACE,4BACGH,IAAI,IACH,4BACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEN,gBAAgB,CAACM,IAAI,CAACI,QAAL,CAAcC,IAAf,CADvB;AAEE,IAAA,GAAG,EAAEL,IAAI,CAACI,QAAL,CAAcC,IAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAOE,MAAC,KAAD;AAAO,IAAA,MAAM,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCL,IAAI,CAACI,QAAL,CAAcE,IAAhD,CAPF,EAQE,MAAC,IAAD;AAAM,IAAA,MAAM,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBN,IAAI,CAACI,QAAL,CAAcC,IAAlC,CARF,EASE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,MAAM,EAAC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF,EAaI,MAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACI,QAAL,CAAcG,SAAd,CAAwBC,GAAxB,CAA4B,UAAAC,QAAQ;AAAA,WACnC,MAAC,IAAD;AAAM,MAAA,IAAI,uBAAgBA,QAAQ,CAACX,EAAzB,CAAV;AAAyC,MAAA,GAAG,EAAEW,QAAQ,CAACX,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAc,MAAA,QAAQ,EAAEW,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADmC;AAAA,GAApC,CADH,CAbJ,CAFJ,CADF;AA8BD,CAnCD;;AAqCA,eAAeZ,eAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Link from 'next/link';\n\nimport { DetailsImage } from './styles';\nimport { Title, Text } from '../LocationsContainer/LocationItem/styles';\nimport { StyledLocationsContainer } from '../LocationsContainer/styles';\n\nimport { getLocationImage } from 'src/utils/helpers';\n\nimport ResidentItem from './ResidentItem';\n\nconst LOCATION_QUERY = gql`\n  query Location($id: ID!) {\n    location(id: $id) {\n      name\n      type\n      id\n      residents {\n        image\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst LocationDetails = ({ id }) => {\n  const { data, error, loading, fetchMore } = useQuery(LOCATION_QUERY, {\n    variables: { id }\n  });\n\n  return (\n    <>\n      {data && (\n        <>\n          <DetailsImage>\n            <img\n              src={getLocationImage(data.location.type)}\n              alt={data.location.type}\n            />\n          </DetailsImage>\n          <Title margin=\"45px 5px 5px 5px\">{data.location.name}</Title>\n          <Text margin=\"5px\">{data.location.type}</Text>\n          <Title textAlign=\"center\" margin=\"25px 0 0 0 \">\n            Residents\n          </Title>\n          {\n            <StyledLocationsContainer>\n              {data.location.residents.map(resident => (\n                <Link href={`/residents/${resident.id}`} key={resident.id}>\n                  <a>\n                    <ResidentItem resident={resident} />\n                  </a>\n                </Link>\n              ))}\n            </StyledLocationsContainer>\n          }\n        </>\n      )}\n    </>\n  );\n};\n\nexport default LocationDetails;\n"]},"metadata":{},"sourceType":"module"}