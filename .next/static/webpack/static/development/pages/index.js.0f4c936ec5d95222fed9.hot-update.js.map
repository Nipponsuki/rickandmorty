{"version":3,"file":"static/webpack/static/development/pages/index.js.0f4c936ec5d95222fed9.hot-update.js","sources":["webpack:///./components/LocationsContainer/LocationItem/index.js","webpack:///./components/LocationsContainer/LocationItem/styles.js"],"sourcesContent":["import React, { memo } from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport {\n  ItemContainer,\n  ItemInfo,\n  ItemImage,\n  Title,\n  Text,\n  LocationItemResidentsContainer,\n  LocationItemResident\n} from './styles';\n\nimport unknownTypeImage from 'src/assets/images/location-types/unknown.png';\nimport clusterTypeImage from 'src/assets/images/location-types/cluster.png';\nimport dreamTypeImage from 'src/assets/images/location-types/dream.png';\nimport fantasyTownTypeImage from 'src/assets/images/location-types/fantasy-town.png';\nimport microverseTypeImage from 'src/assets/images/location-types/microverse.png';\nimport planetTypeImage from 'src/assets/images/location-types/planet.png';\nimport resortTypeImage from 'src/assets/images/location-types/resort.png';\nimport spaceStationTypeImage from 'src/assets/images/location-types/space-station.png';\nimport tvTypeImage from 'src/assets/images/location-types/tv.png';\nimport { LOADER_URL } from 'src/components/Loader';\n\nconst LOCATION_QUERY = gql`\n  query Location($id: ID!) {\n    location(id: $id) {\n      residents {\n        image\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst LOCATION_TYPES = {\n  unknown: unknownTypeImage,\n  cluster: clusterTypeImage,\n  dream: dreamTypeImage,\n  fantasy_town: fantasyTownTypeImage,\n  microverse: microverseTypeImage,\n  planet: planetTypeImage,\n  resort: resortTypeImage,\n  space_station: spaceStationTypeImage,\n  tv: tvTypeImage\n};\n\nconst adjustType = str => str.replace(' ', '_').toLowerCase();\n\nconst LocationItem = memo(({ location: { id, name, type } }) => {\n  const { data, loading, error } = useQuery(LOCATION_QUERY, {\n    variables: { id }\n  });\n  return (\n    <ItemContainer>\n      <ItemImage>\n        <img\n          src={\n            LOCATION_TYPES[adjustType(type)]\n              ? LOCATION_TYPES[adjustType(type)]\n              : unknownTypeImage\n          }\n          alt={type}\n        />\n      </ItemImage>\n      <ItemInfo>\n        <Title>{name}</Title>\n        <Text>{type}</Text>\n        <LocationItemResidentsContainer>\n          {data &&\n            data.location.residents.slice(0, 3).map(resident => (\n              <React.Fragment key={resident.id}>\n                {resident.image && (\n                  <LocationItemResident key={resident.id}>\n                    <img src={resident.image} alt={resident.name} />\n                  </LocationItemResident>\n                )}\n              </React.Fragment>\n            ))}\n        </LocationItemResidentsContainer>\n      </ItemInfo>\n    </ItemContainer>\n  );\n});\n\nexport default LocationItem;\n","import styled from 'styled-components';\n\nconst ItemContainer = styled.div`\n  box-shadow: 2px 2px 10px rgba(29, 99, 234, 0.48);\n  background: #312a2a;\n  width: 95%;\n  height: 145px;\n  margin: 11px;\n  display: flex;\n  align-items: flex-start;\n\n  @media (min-width: 768px) {\n    width: 396px;\n  }\n`;\n\nconst ItemImage = styled.div`\n  flex: 35%;\n  height: 100%;\n  min-width: 35%;\n\n  img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst ItemInfo = styled.div`\n  flex: 65%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 16px;\n  overflow: hidden;\n`;\n\nconst LocationItemResidentsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n`;\n\nconst Title = styled.h3`\n  font-size: ${props => props.theme.fontSizes.title};\n  line-height: ${props => props.theme.lineHeights.title};\n  font-weight: bold;\n  color: #ffffff;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 100%;\n`;\n\nconst Text = styled.p`\n  color: #dcdcdc;\n`;\n\nconst LocationItemResident = styled.div`\n  width: 50px;\n  height: 50px;\n  margin-top: 12px;\n  margin-right: 5%;\n\n  img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport {\n  ItemContainer,\n  ItemImage,\n  ItemInfo,\n  Title,\n  Text,\n  LocationItemResidentsContainer,\n  LocationItemResident\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAWA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AADA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAKA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAaA;AAEA;;;;;;;;;;;;ACvFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AASA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}