{"version":3,"file":"static/webpack/static/development/pages/locations/[id].js.788ace6a1922a76c7bd6.hot-update.js","sources":["webpack:///./hooks/useInfiniteScrollWithoutPagination.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { debounce } from 'src/utils/debounce';\n\nconst STORY_INCREMENT = 10;\n\nexport const useInfiniteScroll = maxElements => {\n  const [loading, setLoading] = useState(false);\n  const [count, setCount] = useState(STORY_INCREMENT);\n\n  const handleScroll = debounce(() => {\n    if (\n      window.innerHeight + document.documentElement.scrollTop !==\n        document.documentElement.offsetHeight ||\n      loading\n    ) {\n      return false;\n    }\n\n    setLoading(true);\n  }, 500);\n\n  useEffect(() => {\n    if (!loading) return;\n\n    if (count + STORY_INCREMENT >= maxElements) {\n      setCount(maxElements);\n    } else {\n      setCount(count + STORY_INCREMENT);\n    }\n\n    setLoading(false);\n  }, [loading]);\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  return { count, loading };\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}